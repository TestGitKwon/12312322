<?xml version="1.0" encoding="UTF-8"?>
<!-- Spring bean configuration file 생성 -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- 
		root-context.xml 파일은 서버 구동 시 web.xml 거쳐서 바로 로딩된다. 
		-> pre-loading 되는 설정파일
		-> 서버 구동 시 바로 세팅 해야되는 내용들을 작성하는 설정파일
		   (DB 연결설정, 트랜잭션 처리, 등등...) 스프링에서 제공하는 서비스들에 대한 설정 관리
	-->
	
	<!-- 기존에 mybatis-config.xml에 작성했던 DB관련 정보(서버 구동됨과 동시에 이루어지게끔) -->	
	<!-- 
		1. DataSource 등록은 서버 연동과 같이 이루어져야 되기 때문에 root-context에서 설정
		   이 때 등록 순서는 중요하다. 먼저 dataSource를 bean으로 등록해야만
		   아래에서 dataSource를 참조할 수 있다.
		 
		  destroy-method : 주어진 세션을 자동으로 close하라는 의미 
	-->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
		<property name="username" value="DOIT"/>
		<property name="password" value="DOIT"/>
		<property name="defaultAutoCommit" value="false"/>
	</bean>
	
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<property name="dataSource" ref="dataSource"/> <!-- 위에껄 참조 -->
	</bean>
	
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSession"/> <!-- 위에껄 참조 -->
	</bean>
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="100000000"/>
		<property name="maxInMemorySize" value="100000000"/>
		</bean>
</beans>
